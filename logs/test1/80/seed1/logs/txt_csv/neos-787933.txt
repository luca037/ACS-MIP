INPUT FILE: benchmark/neos-787933.mps.gz

Creating MIP.
Selected objective sense:  MINIMIZE
Selected objective  name:  R1898
Selected RHS        name:  B
Selected bound      name:  BOUND

Creating FMIP.
Slack variables to add: 3794

### Generate starting point ###
Generating random values . . .
Optimize FMIP relaxation . . . - Iteration 0
Version identifier: 22.1.0.0 | 2022-03-09 | 1a383f8ce
CPXPARAM_DetTimeLimit                            2983.1999999999998
Parallel mode: deterministic, using up to 4 threads for concurrent optimization:
 * Starting dual Simplex on 1 thread...
 * Starting Barrier on 3 threads...
Tried aggregator 1 time.
LP Presolve eliminated 1897 rows and 240170 columns.
All rows and columns eliminated.
Presolve time = 0.07 sec. (53.30 ticks)

Dual simplex solved model.

Solution status: 1
Objective value: 0.000000
Found a feasibile solution for FMIP relax.
Fixed values situation: Random: 2364, Optimize: 234012, Not fixed: 0

### Variable fixing on FMIP - Iteration 0 ###
Variables to fix: 189100
Version identifier: 22.1.0.0 | 2022-03-09 | 1a383f8ce
CPXPARAM_DetTimeLimit                            2983.1999999999998
Found incumbent of value 114.000000 after 0.02 sec. (11.80 ticks)
Probing time = 0.05 sec. (12.63 ticks)
MIP emphasis: balance optimality and feasibility.
MIP search method: dynamic search.
Parallel mode: deterministic, using up to 4 threads.
Root relaxation solution time = 0.10 sec. (63.32 ticks)

        Nodes                                         Cuts/
   Node  Left     Objective  IInf  Best Integer    Best Bound    ItCnt     Gap

*     0+    0                          114.0000        0.0000           100.00%
*     0     0      integral     0        0.0000        0.0000      114    0.00%
Elapsed time = 0.32 sec. (196.38 ticks, tree = 0.00 MB, solutions = 2)

Root node processing (before b&c):
  Real time             =    0.34 sec. (204.12 ticks)
Parallel b&c, 4 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.34 sec. (204.12 ticks)
Solution status: 101
Objective value: 0.000000
Found a feasibile solution for FMIP (Optimal).

Creating OMIP.
Slack variables to add: 3794

### Variable fixing on OMIP - Attempt 0 - Iteration 0 ###
Variables to fix: 189100
Version identifier: 22.1.0.0 | 2022-03-09 | 1a383f8ce
CPXPARAM_DetTimeLimit                            2983.1999999999998
1 of 1 MIP starts provided solutions.
MIP start 'm1' defined initial solution with objective 1764.0000.
Tried aggregator 1 time.
MIP Presolve eliminated 1898 rows and 240170 columns.
All rows and columns eliminated.
Presolve time = 0.05 sec. (66.76 ticks)

Root node processing (before b&c):
  Real time             =    0.11 sec. (107.09 ticks)
Parallel b&c, 4 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.11 sec. (107.09 ticks)
Solution status: 101
Objective value: 1764.000000
Found a feasibile solution for OMIP (Optimal).
Slack sum: 0.000000
Found a feasibile solution for MIP.

### Improve feasibile solution quality ###
Iteration: 0
Variables to fix: 189100
Version identifier: 22.1.0.0 | 2022-03-09 | 1a383f8ce
CPXPARAM_DetTimeLimit                            2983.1999999999998
1 of 2 MIP starts provided solutions.
MIP start 'm1' defined initial solution with objective 1764.0000.
Tried aggregator 1 time.
MIP Presolve eliminated 1898 rows and 240170 columns.
All rows and columns eliminated.
Presolve time = 0.05 sec. (66.79 ticks)

Root node processing (before b&c):
  Real time             =    0.10 sec. (108.42 ticks)
Parallel b&c, 4 threads:
  Real time             =    0.00 sec. (0.00 ticks)
  Sync time (average)   =    0.00 sec.
  Wait time (average)   =    0.00 sec.
                          ------------
Total (root+branch&cut) =    0.10 sec. (108.42 ticks)
Solution status: 101
Objective value: 1764.000000
Found a feasibile solution for OMIP (Optimal).
